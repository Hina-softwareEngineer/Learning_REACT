{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyD_rfB0LlhfSYA_67aWNu9heMt28ZRocoE\",\n  authDomain: \"crown-clothing-a6e47.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-a6e47.firebaseio.com\",\n  projectId: \"crown-clothing-a6e47\",\n  storageBucket: \"crown-clothing-a6e47.appspot.com\",\n  messagingSenderId: \"65798383513\",\n  appId: \"1:65798383513:web:b430c910f825ef5776d508\",\n  measurementId: \"G-QXMTJYEQ6T\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userRef.id}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/hina/Documents/Python/React_Projects/crown-shop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","id","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AAEA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AAEPC,EAAAA,MAAM,EAAE,yCAFD;AAGPC,EAAAA,UAAU,EAAE,sCAHL;AAIPC,EAAAA,WAAW,EAAE,6CAJN;AAKPC,EAAAA,SAAS,EAAE,sBALJ;AAMPC,EAAAA,aAAa,EAAE,kCANR;AAOPC,EAAAA,iBAAiB,EAAE,aAPZ;AAQPC,EAAAA,KAAK,EAAE,0CARA;AASPC,EAAAA,aAAa,EAAE;AATR,CAAf;AAaA,OAAO,MAAMC,yBAAyB,GAAE,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AACnE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAEC,SAAS,CAACC,GAAV,CAAe,SAAQF,OAAO,CAACG,EAAG,EAAlC,CAAf;AAEA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAqB;AACb,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAsBV,QAA5B;AACA,UAAMW,SAAS,GAAE,IAAIC,IAAJ,EAAjB;;AAEA,QAAG;AACK,YAAMV,OAAO,CAACW,GAAR,CACE;AACQJ,QAAAA,WADR;AAEQC,QAAAA,KAFR;AAEeC,QAAAA,SAFf;AAGQ,WAAGV;AAHX,OADF,CAAN;AAOP,KARD,CASA,OAAMa,KAAN,EAAY;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACP;AACR;;AAAA,SAAOf,OAAP;AAER,CAzBM;AA2BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAC9B,QAAQ,CAAC8B,IAAT,EAAX;AACP,OAAO,MAAMhB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAE,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    \n        apiKey: \"AIzaSyD_rfB0LlhfSYA_67aWNu9heMt28ZRocoE\",\n        authDomain: \"crown-clothing-a6e47.firebaseapp.com\",\n        databaseURL: \"https://crown-clothing-a6e47.firebaseio.com\",\n        projectId: \"crown-clothing-a6e47\",\n        storageBucket: \"crown-clothing-a6e47.appspot.com\",\n        messagingSenderId: \"65798383513\",\n        appId: \"1:65798383513:web:b430c910f825ef5776d508\",\n        measurementId: \"G-QXMTJYEQ6T\"\n      \n};\n\nexport const createUserProfileDocument= async(userAuth, additionalData) => {\n        if (!userAuth) return; \n        \n        const userRef= firestore.doc(`users/${userRef.id}`);\n\n        const snapShot=await userRef.get();\n\n        if (!snapShot.exists){\n                const {displayName, email}= userAuth;\n                const createdAt= new Date();\n\n                try{\n                        await userRef.set(\n                                {\n                                        displayName,\n                                        email, createdAt,\n                                        ...additionalData\n                                }\n                        );\n                }\n                catch(error){\n                        console.log('error creating user', error.message);\n                }\n        }return userRef;\n        \n}\n\nfirebase.initializeApp(config);\n\nexport const auth=firebase.auth();\nexport const firestore=firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\n\nexport const SignInWithGoogle= () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}