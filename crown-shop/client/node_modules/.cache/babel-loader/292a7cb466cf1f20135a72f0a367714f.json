{"ast":null,"code":"import shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; // export const updateCollections = (collectionsMap) => ({\n//     type : shopActionTypes.UPDATE_COLLECTIONS,\n//     payload : collectionsMap\n// })\n\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/hina/Documents/Python/React_Projects/crown-shop/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD,C,CACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAGJ,eAAe,CAACK;AADiB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAGJ,eAAe,CAACQ,yBADmC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAGJ,eAAe,CAACY,yBAD+B;AAEtDH,EAAAA,OAAO,EAAGE;AAF4C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGa,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["\nimport shopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n// export const updateCollections = (collectionsMap) => ({\n//     type : shopActionTypes.UPDATE_COLLECTIONS,\n//     payload : collectionsMap\n// })\n\n\nexport const fetchCollectionsStart = () => ({\n    type : shopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type : shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type : shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload : errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};"]},"metadata":{},"sourceType":"module"}