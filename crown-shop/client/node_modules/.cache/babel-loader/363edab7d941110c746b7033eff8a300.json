{"ast":null,"code":"var _jsxFileName = \"/home/hina/Documents/Python/React_Projects/crown-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.compoennt';\nconst CollectionsOverviewwithSpinner = withSpinner(CollectionsOverview);\nconst CollectionsPagewithSpinner = withSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapShot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //const collectionRef= firestore.collection('collections');\n    //collectionRef.onSnapshot(async snapshot => {\n    const {\n      updateCollections\n    } = this.props;\n    console.log(updateCollections);\n    const collectionRef = firestore.collection('collections');\n    console.log(collectionRef, 'hello', collectionRef.get()); //this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewwithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 59\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPagewithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 67\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/hina/Documents/Python/React_Projects/crown-shop/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","connect","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","withSpinner","CollectionsOverviewwithSpinner","CollectionsPagewithSpinner","ShopPage","Component","constructor","unsubscribeFromSnapShot","state","loading","componentDidMount","props","console","log","collectionRef","collection","get","then","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAIA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,0BAA0B,GAACF,WAAW,CAACJ,cAAD,CAA5C;;AAGA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAEpCC,EAAAA,WAAW,GAAE;AACX;AADW,SAUbC,uBAVa,GAUY,IAVZ;AAIb,SAAKC,KAAL,GACA;AACEC,MAAAA,OAAO,EAAC;AADV,KADA;AAID;;AAICC,EAAAA,iBAAiB,GAAE;AACjB;AAEA;AACE,UAAM;AAACV,MAAAA;AAAD,QAAoB,KAAKW,KAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,iBAAZ;AACA,UAAMc,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AACFH,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ,EAA0B,OAA1B,EAAmCA,aAAa,CAACE,GAAd,EAAnC,EAPiB,CAQjB;;AACEF,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,aAAa,GAAEpB,+BAA+B,CAACmB,QAAD,CAApD;AACAlB,MAAAA,iBAAiB,CAACmB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAG;AAAX,OAAd;AACD,KAJD;AAKH;;AACDY,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKX,KAAnB;AACA,UAAM;AAACF,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGZ,KAAD,iBAAU,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEF;AAA3C,SAAwDE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,eAEF,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGZ,KAAD,iBAAU,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEF;AAAvC,SAAoDE,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,CADF;AAMD;;AAvCmC;;AA2CtC,MAAMa,kBAAkB,GAAIC,QAAQ,KAAK;AACvCzB,EAAAA,iBAAiB,EAAG0B,cAAc,IAAID,QAAQ,CAACzB,iBAAiB,CAAC0B,cAAD,CAAlB;AADP,CAAL,CAApC;;AAIA,eAAe9B,OAAO,CAAE,IAAF,EAAQ4B,kBAAR,CAAP,CAAoCpB,QAApC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {connect} from 'react-redux';\nimport CollectionPage from '../collection/collection.component';\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport {updateCollections} from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.compoennt';\n\n\n\nconst CollectionsOverviewwithSpinner = withSpinner(CollectionsOverview);\nconst CollectionsPagewithSpinner=withSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component{\n\n  constructor(){\n    super();\n  \n\n  this.state=\n  {\n    loading:true\n  }\n}\n\n  unsubscribeFromSnapShot= null;\n\n  componentDidMount(){\n    //const collectionRef= firestore.collection('collections');\n\n    //collectionRef.onSnapshot(async snapshot => {\n      const {updateCollections}=this.props;\n      console.log(updateCollections);\n      const collectionRef = firestore.collection('collections');\n    console.log(collectionRef,'hello', collectionRef.get());\n    //this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n      collectionRef.get().then(snapshot => {\n        const collectionMap= convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionMap);\n        this.setState({loading : false});\n      });\n  }\n  render(){\n    const {match}=this.props;\n    const {loading} = this.state;\n    \n    return (\n      <div className='shop-page'>\n    <Route exact path={`${match.path}`} render={(props)=> <CollectionsOverviewwithSpinner isLoading={loading} {...props} />} />\n    <Route path={`${match.path}/:collectionId`} render={(props)=> <CollectionsPagewithSpinner isLoading={loading} {...props} /> } />\n  </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps =  dispatch => ({\n  updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect (null, mapDispatchToProps )(ShopPage);"]},"metadata":{},"sourceType":"module"}