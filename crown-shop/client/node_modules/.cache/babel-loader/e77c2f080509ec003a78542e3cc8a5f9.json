{"ast":null,"code":"var _jsxFileName = \"/home/hina/Documents/Python/React_Projects/crown-shop/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { connect } from 'react-redux';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapShot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/hina/Documents/Python/React_Projects/crown-shop/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","connect","CollectionPage","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapShot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAA0D,+BAA1D;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAEpCC,uBAFoC,GAEX,IAFW;AAAA;;AAIpCC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,aAAa,GAAEN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAArB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC1C,YAAMC,aAAa,GAAET,+BAA+B,CAACQ,QAAD,CAApD;AAEA,KAHD;AAID;;AACDE,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKC,KAAnB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,eAEF,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFE,CADF;AAMD;;AArBmC;;AAyBtC,MAAMgB,kBAAkB,GAAIC,QAAQ,KAAK;AACvCC,EAAAA,iBAAiB,EAAGP,aAAa,IAAIM,QAAQ,CAACC,iBAAiB,CAACP,aAAD,CAAlB;AADN,CAAL,CAApC;;AAIA,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\nimport {connect} from 'react-redux';\nimport CollectionPage from '../collection/collection.component';\nimport {firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component{\n\n  unsubscribeFromSnapShot= null;\n\n  componentDidMount(){\n    const collectionRef= firestore.collection('collections');\n\n    collectionRef.onSnapshot(async snapshot => {\n     const collectionMap= convertCollectionsSnapshotToMap(snapshot);\n     \n    });\n  }\n  render(){\n    const {match}=this.props;\n    \n    return (\n      <div className='shop-page'>\n    <Route exact path={`${match.path}`} component={CollectionsOverview} />\n    <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n  </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps =  dispatch => ({\n  updateCollections : collectionMap => dispatch(updateCollections(collectionMap))\n})\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}