{"ast":null,"code":"import shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; // export const updateCollections = (collectionsMap) => ({\n//     type : shopActionTypes.UPDATE_COLLECTIONS,\n//     payload : collectionsMap\n// })\n\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart()); //this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccessc(collectionMap)); //this.setState({loading : false});\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/hina/Documents/Python/React_Projects/crown-shop/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","fetchCollectionsSuccessc","catch","error","message"],"mappings":"AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD,C,CACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAGJ,eAAe,CAACK;AADiB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACzDH,EAAAA,IAAI,EAAGJ,eAAe,CAACQ,yBADkC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAApB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAGJ,eAAe,CAACY,yBAD+B;AAEtDH,EAAAA,OAAO,EAAGE;AAF4C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAFc,CAGd;;AAGAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMZ,aAAa,GAAEL,+BAA+B,CAACiB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACM,wBAAwB,CAACb,aAAD,CAAzB,CAAR,CAFiC,CAKjC;AACD,KANH,EAMKc,KANL,CAMWC,KAAK,IAAIR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOH,GAbD;AAcH,CAfM","sourcesContent":["\nimport shopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n// export const updateCollections = (collectionsMap) => ({\n//     type : shopActionTypes.UPDATE_COLLECTIONS,\n//     payload : collectionsMap\n// })\n\n\nexport const fetchCollectionsStart = () => ({\n    type : shopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n  type : shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type : shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload : errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch =>{ \n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n        //this.unsubscribeFromSnapShot = collectionRef.onSnapshot(async snapshot => {\n          \n        \n        collectionRef.get().then(snapshot => {\n            const collectionMap= convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccessc(collectionMap));\n\n\n            //this.setState({loading : false});\n          }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}