{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price, 0));\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));","map":{"version":3,"sources":["/home/hina/Documents/Python/React_Projects/crown-shop/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartTotal","reduce","accumulatedQuantity","cartItem","quantity","price","selectCartItemsCount"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAGA,MAAMC,UAAU,GAAEC,KAAK,IAAIA,KAAK,CAACC,IAAjC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAGA,IAAI,CAACI,MAF8B,CAAvC;AAKP,OAAO,MAAMC,eAAe,GAAER,cAAc,CACxC,CAACI,eAAD,CADwC,EAEvCC,SAAD,IAAcA,SAAS,CAACI,MAAV,CACV,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAACC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACE,KAFvC,EAGT,CAHS,CAF0B,CAArC;AAQP,OAAO,MAAMC,oBAAoB,GAAGd,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE7CC,SAAD,IAAcA,SAAS,CAACI,MAAV,CACV,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAACC,QAAQ,CAACC,QAFnB,EAGT,CAHS,CAFgC,CAA3C","sourcesContent":["import { createSelector } from 'reselect';\n\n\nconst selectCart= state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart=> cart.hidden\n)\n\nexport const selectCartTotal= createSelector(\n    [selectCartItems],\n    (cartItems) =>cartItems.reduce(\n        (accumulatedQuantity, cartItem)=> \n        accumulatedQuantity+cartItem.quantity * cartItem.price\n        ,0)\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    (cartItems) =>cartItems.reduce(\n        (accumulatedQuantity, cartItem)=> \n        accumulatedQuantity+cartItem.quantity\n        ,0)\n)"]},"metadata":{},"sourceType":"module"}